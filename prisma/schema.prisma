// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model BarberShop {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  imutable_id String   @default("1")
  name        String
  open_at     String
  close_at    String
  picture     String?
  links       Json[]
  isOpen      Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now()) @updatedAt

  @@map("barberShop")
}

model Barber {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String  @unique
  password  String
  picture   String
  phone     String
  available Boolean @default(true)

  role Role @default(REGULAR)

  created_at DateTime   @default(now())
  updated_at DateTime   @default(now()) @updatedAt
  Schedule   Schedule[]

  @@map("barber")
}

model Customer {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  phone_number String

  created_at DateTime   @default(now())
  updated_at DateTime   @default(now()) @updatedAt
  Schedule   Schedule[]

  @@map("customer")
}

model Schedule {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  time        String
  date        String
  date_time   DateTime
  total_value Float    @default(0)
  status      String   @default("pending")

  barber    Barber @relation(fields: [barber_id], references: [id])
  barber_id String @db.ObjectId

  customer    Customer @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  customer_id String   @db.ObjectId

  services    Service  @relation(fields: [services_id], references: [id])
  services_id String[] @db.ObjectId

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("schedule")
}

model Service {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  price Float

  created_at DateTime   @default(now())
  updated_at DateTime   @default(now()) @updatedAt
  Schedule   Schedule[]

  @@map("service")
}

enum Role {
  ADMIN
  REGULAR
}
